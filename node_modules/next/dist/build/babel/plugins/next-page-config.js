"use strict";exports.__esModule=true;exports.default=nextPageConfig;exports.sprStatus=exports.dropBundleIdentifier=void 0;const dropBundleIdentifier='__NEXT_DROP_CLIENT_FILE__';exports.dropBundleIdentifier=dropBundleIdentifier;const sprStatus={used:false};exports.sprStatus=sprStatus;const configKeys=new Set(['amp']);const pageComponentVar='__NEXT_COMP';// this value can't be optimized by terser so the shorter the better
const prerenderId='__NEXT_SPR';const EXPORT_NAME_GET_STATIC_PROPS='unstable_getStaticProps';const EXPORT_NAME_GET_STATIC_PARAMS='unstable_getStaticParams';// replace program path with just a variable with the drop identifier
function replaceBundle(path,t){path.parentPath.replaceWith(t.program([t.variableDeclaration('const',[t.variableDeclarator(t.identifier('config'),t.assignmentExpression('=',t.identifier(dropBundleIdentifier),t.stringLiteral(`${dropBundleIdentifier} ${Date.now()}`)))])],[]));}// config to parsing pageConfig for client bundles
function nextPageConfig({types:t}){return{visitor:{Program:{enter(path,state){path.traverse({ExportNamedDeclaration(path,state){if(state.bundleDropped||!path.node.declaration){return;}const{declarations,id}=path.node.declaration;const config={};// drop SSR Exports for client bundles
if(id&&(id.name===EXPORT_NAME_GET_STATIC_PROPS||id.name===EXPORT_NAME_GET_STATIC_PARAMS)){if(id.name===EXPORT_NAME_GET_STATIC_PROPS){state.isPrerender=true;sprStatus.used=true;}path.remove();return;}if(!declarations){return;}for(const declaration of declarations){if(declaration.id.name!=='config'){continue;}if(declaration.init.type!=='ObjectExpression'){const pageName=(state.filename||'').split(state.cwd||'').pop()||'unknown';throw new Error(`Invalid page config export found. Expected object but got ${declaration.init.type} in file ${pageName}. See: https://err.sh/zeit/next.js/invalid-page-config`);}for(const prop of declaration.init.properties){const{name}=prop.key;if(configKeys.has(name)){// @ts-ignore
config[name]=prop.value.value;}}}if(config.amp===true){replaceBundle(path,t);state.bundleDropped=true;return;}}},state);}},ExportDefaultDeclaration(path,state){if(!state.isPrerender||state.defaultExportUpdated){return;}const prev=t.cloneDeep(path.node.declaration);// workaround to allow assigning a ClassDeclaration to a variable
// babel throws error without
if(prev.type.endsWith('Declaration')){prev.type=prev.type.replace(/Declaration$/,'Expression');}// @ts-ignore invalid return type
const[pageCompPath]=path.replaceWithMultiple([t.variableDeclaration('const',[t.variableDeclarator(t.identifier(pageComponentVar),prev)]),t.assignmentExpression('=',t.memberExpression(t.identifier(pageComponentVar),t.identifier(prerenderId)),t.booleanLiteral(true)),t.exportDefaultDeclaration(t.identifier(pageComponentVar))]);path.scope.registerDeclaration(pageCompPath);state.defaultExportUpdated=true;}}};}